var searchIndex = JSON.parse('{\
"os":{"doc":"","t":"FFONNNCNNNNNNNNNNCCNNCNNCNNHCCCCNNNNQQHNNNNCCCCNNNNNNNNNNNNNNISISSSSSSOOHHOESSEESSSSSFNNNNNNNNNNHNNNNNNNNNNEECCCCCCCFEONHNNNNNNNNNNNNNNNNNCNNSFINNNNNNONNONNNNNNNNNNNNOONNNCCSHHHFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKEEFONNNNNNNNMNCNNCMNNNNNNNNNMTTTTFFFFFFTTFTTFOOOONNNNNNNNNNNONNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNONNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNONNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNONNNNNNNNNNNNNNNNNNNNNJFKSFIONNNNNNNNNNNNNOMNNNMNOONNNNNNNNNNNNNNNNNNNNNMNONNNNKFFSSFFIOONNNNNNNNNNNNNNNNNNNNNNNNONNONNNNMNOONNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNFKSFONNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNNNNNNNNNNNGPFPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKEEECEEECMMCMMTFFFTTFTTONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNHNNOHNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONPPPFFSGNONNNNNNNNNNNONNNNNNNNNNNNNNNONNNHNNNNNNNNNNNONNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNONNONFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFNNNNNNNNNHNNNNHNNNNNNNNNNEEEEEECEEECECHECCEEEEFFNNNNNNNNNNNNNNOONNNNNNNNNONNNNNNNONNNNNNNNNNNNNNNNNNNFKIFFOMNMNNNNNNNNNNNNNNNNNNNOOMNNNOONHHHHHHNNNNHNNNMNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNJJHHHPPPFFGFTTTTNNONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNHHHHHFFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHNNNNNNNNCNNNNNNCCNNNNNNNNNNNNNCNNNNNNNNNNNNFFFOHHNNNNNNNNNNNNHNNNNNNNNNNNNNNHNNNNNNNOHNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNFFOOHNNNNNNONNNNNNNNNHHNNONNNNHHOHONNNNOHNNNNNNNNNNNNNNFONNNNNNONNNNNNNNNNOOOONNNNNNNNNFNNNNNNONNNNNNNNNNOOONNNNNNNNNEEEEEEECCCCFFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNKFFFNNNNNNNNNNNNNNNNNNNNNONNNMNNOONNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNONNNNNNFFNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNONNNNFFFFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSCCCCCCHCHHHHHHSHHHHHHHHHHHHHHHHHHHHHHHHHHHHEFEEEEEOHENHHNNNHNNHEEEENHNCNCNNEECCEENNECHECHNNNNNENNSFFFFFFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNHOONNNNNNNNNNNNOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNNNNNNNNNFFFOONHNNNNNNNNNNNNNNNNNNNNNHNNNHNNNNNNNNNNHOHNNNNNNNNNNNNNNNNNNNNNHNNNNNNFFNNNNNNNNNNNNNNOONNOONNNNNNONNNOOONNNNNOONNNNOOOONNNNNNNNNNNNNNNFFONNNNNNNNNNNNNOHHHHHNNNNNONNNNNNNHNNNNHNHNNNNNNNNNNNNNNTTTTTFNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFFGNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNOONNNNNNNONOONNNNNNOONONNNNNNNNNNNNNNNNNNNNNSSFFOHNNNNNNNNHNNNNNNNONNHHNNNNNNNNNNNONNNNNNNNNNNNNN","n":["DEV_NON_BLOCKING_ACCESS","PageAllocImpl","__private_field","alloc","az","az","board","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","config","console","dealloc","deref","drivers","from","from","fs","into","into","kernel_interrupt","lang_items","logging","mm","net","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","print","println","rust_main","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","sync","syscall","task","timer","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BlockDeviceImpl","CLOCK_FREQ","CharDeviceImpl","MEMORY_END","MMIO","VIRTGPU_XRES","VIRTGPU_YRES","VIRT_PLIC","VIRT_UART","buffer","condvars","device_init","irq_handler","virtio_blk","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT_BASE","USER_STACK_SIZE","Stdout","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","from","into","overflowing_as","overflowing_cast_from","print","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","write_str","BLOCK_DEVICE","BLOCK_DEVICE","block","bus","chardev","gpu","input","net","plic","BLOCK_DEVICE","VirtIOBlock","__private_field","az","block_device_test","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","from","into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","virtio_blk","wrapping_as","wrapping_cast_from","VIRTIO0","VirtIOBlock","VirtIoTransport","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","condvars","from","handle_irq","header","into","new","overflowing_as","overflowing_cast_from","read_block","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","version","virtio_blk","wrapping_as","wrapping_cast_from","write_block","pci","virtio","MMCONFIG_BASE","dump_bar_contents","enumerate_pci","find_device","QUEUE_FRAMES","VirtioHal","__private_field","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","dma_alloc","dma_dealloc","from","from","into","into","mmio_phys_to_virt","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","share","try_from","try_from","try_into","try_into","type_id","type_id","unshare","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","CharDevice","NS16550a","PolyInput","UART","__private_field","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","from","init","into","ns16550a","overflowing_as","overflowing_cast_from","poly_input","read","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","write","AUX_OUTPUT1","AUX_OUTPUT2","DATA_AVAILABLE","DATA_TERMINAL_READY","IER","LSR","MCR","NS16550a","NS16550aInner","NS16550aRaw","REQUEST_TO_SEND","RX_AVAILABLE","ReadWithoutDLAB","THR_EMPTY","TX_EMPTY","WriteWithoutDLAB","_padding0","_padding1","_padding1","_padding2","all","all","all","az","az","az","az","az","az","az","az","base_addr","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","condvar","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","ier","ier","iir","init","init","inner","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","lcr","lcr","lsr","lsr","mcr","mcr","new","new","not","not","not","ns16550a","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","rbr","read","read","read_buffer","read_buffer_is_empty","read_end","remove","remove","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","thr","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write","write_end","PolyInput","az","borrow","borrow_mut","buffer","cast_from","checked_as","checked_cast_from","from","init","into","new","overflowing_as","overflowing_cast_from","read","read_buffer_is_empty","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","write","BMP_DATA","GPU_DEVICE","GpuDevice","VIRTIO7","VirtIOGpuWrapper","VirtIoTransport","__private_field","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","fb","flush","flush","from","from","get_framebuffer","get_framebuffer","gpu","header","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","update_cursor","update_cursor","version","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","InputDevice","KEYBOARD_DEVICE","MOUSE_DEVICE","VIRTIO5","VIRTIO6","VirtIOInputInner","VirtIOInputWrapper","VirtIoTransport","__private_field","__private_field","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","condvar","deref","deref","events","from","from","from","from","handle_irq","handle_irq","header","inner","into","into","into","into","is_empty","is_empty","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read_event","read_event","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","version","virtio_input","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","NET_DEVICE","NetDevice","VIRTIO8","VirtIONetWrapper","__private_field","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","from","from","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","receive","receive","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","transmit","transmit","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","IntrTargetPriority","Machine","PLIC","Supervisor","az","az","base_addr","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","claim","claim_comp_ptr_of_hart_with_priority","clone","clone_into","complete","disable","enable","enable_ptr","from","from","get_priority","get_threshold","hart_id_with_priority","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","priority_ptr","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set_priority","set_threshold","supported_number","threshold_ptr_of_hart_with_priority","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","File","OpenFlags","Stdin","Stdout","inode","list_apps","make_pipe","open_file","pipe","read","readable","stdio","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","new","not","offset","open_file","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","read","read_all","read_write","readable","readable","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","writable","writable","write","Empty","Full","Normal","Pipe","PipeRingBuffer","RING_BUFFER_SIZE","RingBufferStatus","all_write_ends_closed","arr","available_read","available_write","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","eq","from","from","from","head","into","into","into","make_pipe","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read","read_byte","read_end_with_buffer","readable","readable","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_write_end","status","tail","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","writable","writable","write","write_byte","write_end","write_end_with_buffer","Stdin","Stdout","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","from","from","into","into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","read","read","readable","readable","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","writable","writable","write","write","panic","Logger","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","enabled","flush","from","init","into","log","overflowing_as","overflowing_cast_from","puts","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","write_str","FrameTracker","MapArea","MapPermission","MapType","MemorySet","VPNRange","address","frame_alloc","frame_alloc_more","frame_alloc_persist","frame_allocator","frame_dealloc","heap_allocator","init","init_frame_allocator","memory_set","page_table","translated_byte_buffer","translated_ref","translated_refmut","translated_str","SimpleRangeIterator","VPNRange","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","current","end","fmt","from","from","get_end","get_start","into","into","into_iter","into_iter","l","new","new","next","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","r","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","alloc_more","alloc_more","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_alloc_more","frame_alloc_persist","frame_allocator_alloc_more_test","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","ppn","recycled","recycled","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","Linear","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","activate","all","areas","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","map","map_perm","map_type","new","new_bare","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","page_table","partial_cmp","push","recycle_data_pages","remove","remove_area_with_start_vpn","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","unmap","unmap_one","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vpn_range","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","str_len","translated_byte_buffer","translated_ref","translated_refmut","translated_str","IPv4","LOSE_NET_STACK","NetStack","__private_field","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","deref","eq","fmt","fmt","from","from","from","from_u32","hexdump","into","into","into","net_interrupt_handler","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","port_table","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","socket","tcp","to_owned","to_string","to_string","to_u32","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","udp","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","LISTEN_TABLE","Port","PortFd","__private_field","accept","accept_connection","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","check_accept","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","deref","drop","from","from","from","into","into","into","listen","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","port","port_acceptable","read","readable","receivable","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","schedule","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","writable","write","SOCKET_TABLE","Socket","__private_field","ack","add_socket","az","az","borrow","borrow","borrow_mut","borrow_mut","buffers","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","from","from","get_s_a_by_index","get_socket","into","into","lport","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","pop_data","push_data","raddr","remove_socket","rport","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","seq","set_s_a_by_index","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TCP","ack","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","dport","drop","from","into","new","overflowing_as","overflowing_cast_from","read","readable","saturating_as","saturating_cast_from","seq","socket_index","sport","target","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","writable","write","UDP","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","dport","drop","from","into","new","overflowing_as","overflowing_cast_from","read","readable","saturating_as","saturating_cast_from","socket_index","sport","target","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","writable","write","Condvar","Mutex","MutexBlocking","MutexSpin","Semaphore","UPIntrFreeCell","UPIntrRefMut","condvar","mutex","semaphore","up","Condvar","CondvarInner","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","from","from","inner","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","signal","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wait_no_sched","wait_queue","wait_with_mutex","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Mutex","MutexBlocking","MutexBlockingInner","MutexSpin","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","from","from","from","inner","into","into","into","lock","lock","lock","locked","locked","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlock","unlock","unlock","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wait_queue","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Semaphore","SemaphoreInner","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","count","down","from","from","inner","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","up","wait_queue","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","INTR_MASKING_INFO","IntrMaskingInfo","UPIntrFreeCell","UPIntrRefMut","UPSafeCellRaw","__private_field","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","deref","deref","deref_mut","drop","enter","exclusive_access","exclusive_session","exit","from","from","from","from","from","get_mut","inner","inner","into","into","into","into","into","nested_level","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sie_before_masking","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","SYSCALL_ACCEPT","SYSCALL_CLOSE","SYSCALL_CONDVAR_CREATE","SYSCALL_CONDVAR_SIGNAL","SYSCALL_CONDVAR_WAIT","SYSCALL_CONNECT","SYSCALL_DUP","SYSCALL_EVENT_GET","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_FRAMEBUFFER","SYSCALL_FRAMEBUFFER_FLUSH","SYSCALL_GETPID","SYSCALL_GETTID","SYSCALL_GET_TIME","SYSCALL_KEY_PRESSED","SYSCALL_KILL","SYSCALL_LISTEN","SYSCALL_MUTEX_CREATE","SYSCALL_MUTEX_LOCK","SYSCALL_MUTEX_UNLOCK","SYSCALL_OPEN","SYSCALL_PIPE","SYSCALL_READ","SYSCALL_SEMAPHORE_CREATE","SYSCALL_SEMAPHORE_DOWN","SYSCALL_SEMAPHORE_UP","SYSCALL_SLEEP","SYSCALL_THREAD_CREATE","SYSCALL_WAITPID","SYSCALL_WAITTID","SYSCALL_WRITE","SYSCALL_YIELD","fs","gui","input","net","process","sync","syscall","thread","sys_close","sys_dup","sys_open","sys_pipe","sys_read","sys_write","FB_VADDR","sys_framebuffer","sys_framebuffer_flush","sys_event_get","sys_key_pressed","sys_accept","sys_connect","sys_listen","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_kill","sys_waitpid","sys_yield","sys_condvar_create","sys_condvar_signal","sys_condvar_wait","sys_mutex_create","sys_mutex_lock","sys_mutex_unlock","sys_semaphore_create","sys_semaphore_down","sys_semaphore_up","sys_sleep","sys_gettid","sys_thread_create","sys_waittid","IDLE_PID","INITPROC","KernelStack","PidHandle","SignalFlags","TaskControlBlock","TaskStatus","__private_field","add_initproc","add_task","az","block_current_and_run_next","block_current_task","borrow","borrow_mut","cast_from","check_signals_of_current","checked_as","checked_cast_from","current_add_signal","current_kstack_top","current_process","current_task","current_trap_cx","deref","exit_current_and_run_next","from","id","into","manager","overflowing_as","overflowing_cast_from","pid2process","pid_alloc","process","processor","remove_from_pid2process","run_tasks","saturating_as","saturating_cast_from","schedule","signal","suspend_current_and_run_next","take_current_task","task","task_entry","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wakeup_task","wrapping_as","wrapping_cast_from","IDLE_PID","KSTACK_ALLOCATOR","KernelStack","PID_ALLOCATOR","PidHandle","RecycleAllocator","TaskUserRes","__private_field","__private_field","alloc","alloc_tid","alloc_user_res","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","current","dealloc","dealloc_tid","dealloc_user_res","deref","deref","drop","drop","from","from","from","from","from","from","get_position","inner","into","into","into","into","into","into","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pid_alloc","process","recycled","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","tid","trap_cx_bottom_from_tid","trap_cx_ppn","trap_cx_user_va","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","ustack_base","ustack_base","ustack_bottom_from_tid","ustack_top","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","PID2PCB","TASK_MANAGER","TaskManager","__private_field","__private_field","add","add_task","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","deref","deref","fetch","fetch_task","from","from","from","insert_into_pid2process","into","into","into","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pid2process","ready_queue","remove_from_pid2process","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wakeup_task","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ProcessControlBlock","ProcessControlBlockInner","alloc_fd","alloc_tid","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","children","condvar_list","dealloc_tid","exec","exit_code","fd_table","fork","from","from","get_task","get_user_token","getpid","inner","inner_exclusive_access","into","into","is_zombie","memory_set","mutex_list","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parent","pid","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","semaphore_list","signals","task_res_allocator","tasks","thread_count","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","PROCESSOR","Processor","__private_field","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","current","current","current_kstack_top","current_process","current_task","current_trap_cx","current_trap_cx_user_va","deref","from","from","get_idle_task_cx_ptr","idle_ready","idle_task_cx","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","run_tasks","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","SIGABRT","SIGFPE","SIGILL","SIGINT","SIGSEGV","SignalFlags","all","az","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","cast_from","check_error","checked_as","checked_cast_from","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","overflowing_as","overflowing_cast_from","partial_cmp","remove","saturating_as","saturating_cast_from","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","Blocked","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","eq","exit_code","from","from","from","get_status","get_trap_cx","inner","inner_exclusive_access","into","into","into","kcontext","kstack","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","page_table","page_table_token","process","res","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","task_cx","task_status","to_owned","trap_cx","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","MSEC_PER_SEC","TICKS_PER_SEC","TIMERS","TimerCondVar","__private_field","add_timer","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","check_timer","checked_as","checked_as","checked_cast_from","checked_cast_from","cmp","deref","eq","expire_ms","from","from","get_time","get_time_ms","into","into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","task","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":[[0,"os"],[61,"os::board"],[75,"os::config"],[85,"os::console"],[107,"os::drivers"],[116,"os::drivers::block"],[141,"os::drivers::block::virtio_blk"],[171,"os::drivers::bus"],[173,"os::drivers::bus::pci"],[177,"os::drivers::bus::virtio"],[224,"os::drivers::chardev"],[254,"os::drivers::chardev::ns16550a"],[582,"os::drivers::chardev::poly_input"],[608,"os::drivers::gpu"],[665,"os::drivers::input"],[766,"os::drivers::net"],[815,"os::drivers::plic"],[876,"os::fs"],[890,"os::fs::inode"],[1034,"os::fs::pipe"],[1124,"os::fs::stdio"],[1172,"os::lang_items"],[1173,"os::logging"],[1199,"os::mm"],[1220,"os::mm::address"],[1275,"os::mm::frame_allocator"],[1365,"os::mm::heap_allocator"],[1370,"os::mm::memory_set"],[1528,"os::mm::page_table"],[1533,"os::net"],[1613,"os::net::port_table"],[1689,"os::net::socket"],[1744,"os::net::tcp"],[1776,"os::net::udp"],[1806,"os::sync"],[1817,"os::sync::condvar"],[1863,"os::sync::mutex"],[1936,"os::sync::semaphore"],[1982,"os::sync::up"],[2099,"os::syscall"],[2141,"os::syscall::fs"],[2147,"os::syscall::gui"],[2150,"os::syscall::input"],[2152,"os::syscall::net"],[2155,"os::syscall::process"],[2163,"os::syscall::sync"],[2173,"os::syscall::thread"],[2176,"os::task"],[2230,"os::task::id"],[2380,"os::task::manager"],[2454,"os::task::process"],[2519,"os::task::processor"],[2576,"os::task::signal"],[2645,"os::task::task"],[2727,"os::timer"],[2780,"polyhal::addr"],[2781,"core::option"],[2782,"polyhal::components::trapframe::riscv64"],[2783,"polyhal::components::trap"],[2784,"core::result"],[2785,"core::any"],[2786,"core::fmt"],[2787,"core::fmt"],[2788,"alloc::sync"],[2789,"virtio_drivers::transport::pci::bus"],[2790,"virtio_drivers::transport::pci::bus"],[2791,"core::ops::function"],[2792,"alloc::vec"],[2793,"virtio_drivers::hal"],[2794,"core::ptr::non_null"],[2795,"core::cmp"],[2796,"core::iter::traits::collect"],[2797,"core::fmt"],[2798,"easy_fs::vfs"],[2799,"core::panic::panic_info"],[2800,"log"],[2801,"log"],[2802,"polyhal::components::pagetable"],[2803,"polyhal::addr"],[2804,"core::fmt"],[2805,"polyhal::components::kcontext::riscv64"],[2806,"core::ops::function"],[2807,"alloc::collections::binary_heap"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","InterruptEnableRegister","LineStatusRegister","Model Control Register","","","","","","","","","","ignore FCR","ignore MSR","ignore other registers","ignore SCR","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","interrupt enable register","interrupt enable register","interrupt identification register","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","line control register","line control register","line status register","line status register","model control register","modem control register","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","receiver buffer register","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","transmitter holding register","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","Do not check validity for simplicity Return (readable, …","","","Removes the specified flags in-place.","","","","","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return (read_end, write_end)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","offset of page num","","","","","","","","","","Returns the set containing all flags.","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","data: start-aligned but maybe with shorter length assume …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Include sections in elf and trampoline, also returns …","","","","Inserts the specified flags in-place.","Assume that no conflicts.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","Removes the specified flags in-place.","","","","","","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","Load a string from other address spaces into kernel space …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","get the seq and ack by socket index","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panic if the data has been borrowed.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","inner data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check UART’s read-buffer is empty or not","","","","","","","","","","If there is not a child process whose pid is same as …","","","","","","","","","","","","","","thread does not exist, return -1 thread has not exited …","","","","","","","","","","","","","This function must be followed by a schedule","","","","","","","","","","","","","Exit the current ‘Running’ task and run the next task …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only support processes with a single thread.","","","Only support processes with a single thread.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Check if the idle task cx was ready","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,5,1,1,5,0,1,5,1,5,1,5,1,5,1,5,0,0,1,5,0,1,5,0,1,5,0,0,0,0,0,1,5,1,5,0,0,0,1,5,1,5,0,0,0,0,1,5,1,5,1,5,1,5,1,5,1,5,1,5,0,0,0,0,0,0,0,0,0,141,142,0,0,142,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,0,0,0,21,21,21,21,21,21,21,21,21,143,21,21,21,21,21,21,21,21,21,21,21,21,143,21,21,21,21,0,0,0,0,0,0,0,0,29,144,29,144,29,144,29,144,29,144,29,144,29,29,144,144,144,29,144,29,144,144,29,144,29,144,29,144,29,144,144,29,144,29,144,29,144,144,29,144,29,144,29,144,29,0,0,0,0,35,35,35,35,35,35,35,35,35,37,35,0,35,35,0,37,35,35,35,35,35,35,35,35,35,37,40,40,39,40,0,0,0,0,0,0,40,38,0,39,38,0,49,48,49,48,38,39,40,48,49,46,145,47,38,39,40,46,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,47,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,38,38,38,38,39,39,39,39,39,40,40,40,40,40,48,49,46,145,47,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,48,49,48,46,47,47,38,39,40,38,39,40,38,39,40,48,49,46,145,47,38,39,40,38,39,40,38,39,40,48,49,48,49,48,49,46,47,38,39,40,145,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,38,39,40,48,46,47,145,47,46,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,49,38,39,40,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,48,49,46,145,47,38,39,40,46,47,46,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,0,0,0,0,50,52,50,52,50,52,50,52,50,52,50,52,50,50,52,51,52,52,50,51,52,52,146,52,50,52,52,50,52,50,52,50,52,50,52,50,52,50,52,50,52,50,52,50,51,52,146,52,50,52,50,0,0,0,0,0,0,0,0,53,55,147,56,53,55,147,56,53,55,147,56,53,55,147,56,53,55,147,56,53,55,147,56,53,55,56,53,55,147,147,56,53,55,54,56,148,56,147,56,53,55,54,56,56,147,56,53,55,147,56,53,55,54,56,147,56,53,55,147,56,53,55,147,56,53,55,147,56,53,55,147,56,53,55,147,56,53,55,147,56,53,55,148,147,147,56,53,55,147,56,53,55,0,0,0,0,58,60,58,60,58,60,58,60,58,60,58,60,58,58,60,58,60,58,60,60,58,60,58,59,60,60,58,60,58,59,60,60,58,60,58,60,58,60,58,60,58,60,58,60,58,0,62,0,62,61,62,61,61,62,61,62,61,62,61,62,61,62,61,61,62,62,61,61,61,61,61,62,61,61,61,61,62,61,61,62,61,62,61,61,62,61,62,61,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,0,0,0,0,0,0,0,0,0,64,64,0,64,64,65,0,0,0,65,65,0,65,65,66,65,68,149,66,65,65,65,65,65,65,65,65,65,68,149,66,65,68,149,66,65,68,149,66,65,68,149,66,65,68,149,66,65,65,65,65,65,65,66,65,65,65,65,65,65,65,65,65,68,149,66,65,65,65,65,65,65,68,149,65,65,65,68,149,66,65,65,65,0,68,65,149,0,68,149,66,65,68,149,66,65,65,68,68,65,68,68,65,68,149,66,65,68,149,66,65,65,65,65,65,65,65,68,149,66,65,68,149,66,65,68,149,66,65,65,68,149,66,65,68,149,66,65,68,149,66,65,68,149,66,65,68,68,68,70,70,70,0,0,0,0,69,69,69,69,71,69,70,71,69,70,71,69,70,71,71,69,70,71,69,70,71,69,70,70,70,70,71,69,70,69,71,69,70,0,69,71,69,70,71,69,70,71,69,71,71,71,71,69,70,71,69,70,69,69,69,70,71,69,70,71,69,70,71,69,70,71,69,70,71,69,70,71,69,70,71,69,70,71,71,71,69,69,71,0,0,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,0,0,75,75,75,75,75,75,75,75,75,0,75,75,75,75,0,75,75,75,75,75,75,75,75,75,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,78,80,78,80,78,80,78,80,78,80,78,78,78,80,80,78,80,78,78,78,80,78,80,78,78,80,78,80,80,78,80,78,78,80,78,80,78,78,80,78,80,78,80,78,80,78,80,78,80,78,80,78,0,0,0,0,0,83,81,82,81,82,30,82,83,30,82,83,30,82,83,30,82,83,30,82,83,30,82,83,82,150,81,82,83,30,82,150,30,0,0,0,0,0,0,30,82,83,82,0,30,82,83,81,30,82,30,82,83,30,82,83,30,82,150,30,82,83,30,82,83,30,82,83,30,82,83,30,82,83,30,82,83,30,82,83,30,82,83,30,82,83,0,0,0,0,0,87,87,87,0,0,0,0,86,86,86,86,85,86,85,85,88,87,86,86,86,86,86,86,86,86,86,85,88,87,86,85,88,87,86,85,88,87,86,85,88,87,86,85,88,87,86,87,86,87,86,86,86,86,88,88,86,86,87,86,86,87,86,86,86,86,86,85,88,87,86,88,86,86,86,85,85,86,86,86,85,86,86,85,88,87,86,86,86,86,88,88,88,88,85,86,85,88,87,86,85,88,87,86,85,86,85,85,86,85,85,88,87,86,85,88,87,86,86,86,86,86,87,86,86,85,85,85,88,87,86,85,88,87,86,85,88,87,86,86,88,88,85,88,87,86,85,88,87,86,88,85,88,87,86,85,88,87,86,0,0,0,0,0,0,0,0,94,93,95,94,93,95,94,93,95,94,93,95,94,93,95,94,93,95,94,93,93,94,93,93,93,93,95,94,93,0,93,95,94,0,93,95,93,95,94,93,95,94,0,93,95,94,93,95,94,0,0,93,93,93,93,93,95,94,93,95,94,93,95,94,0,93,95,94,93,95,94,93,95,94,93,95,94,0,0,0,100,0,0,101,102,100,101,102,100,101,102,100,101,102,100,0,101,102,100,101,102,100,100,102,101,102,100,101,102,100,0,102,101,102,100,101,102,100,101,0,102,102,101,101,102,100,101,102,100,101,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,102,102,0,0,103,104,0,104,103,104,103,104,103,104,104,103,104,103,104,103,103,104,103,0,0,104,103,104,104,103,104,103,0,0,104,0,104,104,103,104,103,104,0,104,103,104,103,104,103,104,103,104,103,104,103,104,103,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,0,0,0,0,0,0,0,0,0,0,0,0,107,151,107,151,107,151,107,151,107,151,107,151,107,151,107,107,151,107,107,151,107,151,107,151,107,151,107,107,151,107,151,107,151,107,151,107,151,107,151,107,107,151,107,151,0,0,0,0,110,111,152,110,111,152,110,111,152,110,111,152,110,111,152,110,111,152,110,111,152,111,110,111,152,109,110,111,110,152,110,111,110,111,152,110,111,152,110,111,152,110,111,152,110,111,152,110,111,152,110,111,152,109,110,111,110,111,152,110,111,152,152,110,111,152,110,111,152,0,0,112,153,112,153,112,153,112,153,112,153,112,153,153,112,112,153,112,112,153,112,112,153,112,153,112,153,112,153,112,153,112,153,112,153,112,153,112,153,112,153,112,153,112,153,0,0,0,0,0,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,113,114,113,113,115,7,7,115,116,115,7,113,114,116,116,7,116,115,7,113,114,115,116,115,7,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,115,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,116,115,7,113,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,0,0,121,0,0,121,121,121,0,121,121,0,0,0,0,0,121,0,121,0,121,0,121,121,0,0,0,0,0,0,121,121,0,0,0,0,0,0,121,121,121,121,121,0,121,121,0,0,0,0,0,0,0,125,126,123,124,124,123,127,128,124,125,126,123,127,128,124,125,126,123,127,128,124,125,126,123,127,128,124,125,126,123,127,128,124,125,126,123,127,128,124,125,126,123,123,124,124,125,126,127,124,123,127,128,124,125,126,128,128,123,127,128,124,125,126,123,128,124,123,127,128,124,125,126,123,127,128,124,125,126,0,124,123,123,127,128,124,125,126,123,127,128,124,125,126,124,0,124,124,123,127,128,124,125,126,123,127,128,124,125,126,123,127,128,124,125,126,123,127,128,124,125,126,123,127,128,124,125,126,124,124,0,124,123,127,128,124,125,126,123,127,128,124,125,126,0,0,0,130,131,129,0,129,130,131,129,130,131,129,130,131,129,130,131,129,130,131,129,130,131,130,131,129,0,129,130,131,0,129,130,131,129,129,130,131,129,130,131,0,129,0,129,130,131,129,130,131,129,130,131,129,130,131,129,130,131,129,130,131,129,130,131,0,129,130,131,129,130,131,0,0,133,133,122,133,122,133,122,133,122,133,122,133,122,133,133,133,133,122,133,133,122,122,133,133,133,122,122,122,122,133,133,133,133,122,122,133,122,133,133,122,122,133,122,133,133,133,133,133,133,122,133,122,133,122,133,122,133,122,133,122,133,122,133,0,0,135,134,135,134,135,134,135,134,135,134,135,134,135,134,134,0,0,0,0,0,135,134,135,134,134,134,134,135,134,134,135,134,135,0,134,135,134,135,0,134,0,134,135,134,135,134,135,134,135,134,135,134,135,134,135,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,136,136,136,0,0,0,97,137,136,97,137,136,97,137,136,97,137,136,97,137,136,97,137,136,136,136,136,137,97,137,136,137,137,97,97,97,137,136,97,97,97,97,137,136,97,137,136,137,97,97,137,97,137,136,97,137,136,137,137,136,137,97,137,136,97,137,136,97,137,136,97,137,136,97,137,136,97,137,136,97,137,136,0,0,0,0,139,0,138,139,138,139,138,139,138,139,0,138,139,138,139,138,139,138,138,138,139,0,0,138,139,138,139,138,139,138,138,139,138,139,138,138,139,138,139,138,139,138,139,138,139,138,139,138,139],"f":[0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,0,[[1,2],4],[5,[[7,[6]]]],0,[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[8,9],4],0,0,0,0,[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,0,[10,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[14,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[15,16],17],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[18,[[20,[19]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[-1,-1,[]],[21,4],0,[-1,-2,[],[]],[[],21],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[21,10,[23,[22]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[21,10,[23,[22]]],4],0,0,0,[[24,25,22],4],[[22,-1],[[3,[26]]],[[28,[26],[[27,[6]]]]]],[-1,[[3,[26]]],[[28,[26],[[27,[6]]]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[29,[[7,[[31,[30]]]]]],[[10,32],[[4,[10,[33,[22]]]]]],[[10,[33,[22]],10],34],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,10],[[33,[22]]]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[[23,[22]]]],32],10],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[[10,[33,[[23,[22]]]],32],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[35,[[20,[36]]]],[-1,-1,[]],[37,4],[-1,-2,[],[]],0,[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,[37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[37,22],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],38],[[],39],[[],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],4],[[39,39],4],[[40,40],4],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],4],[[39,39],4],[[40,40],4],[38,22],[39,22],[40,22],0,0,0,[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],4],[[39,39],4],[[40,40],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[38,38],[39,39],[40,40],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[38,38],41],[[39,39],41],[[40,40],41],[38,38],[39,39],[40,40],0,[[38,38],6],[[39,39],6],[[40,40],6],[[38,38],38],[[39,39],39],[[40,40],40],[[],38],[[],39],[[],40],[[38,38],6],[[39,39],6],[[40,40],6],[[38,-1],4,[[43,[],[[42,[38]]]]]],[[39,-1],4,[[43,[],[[42,[39]]]]]],[[40,-1],4,[[43,[],[[42,[40]]]]]],[[38,44],17],[[38,44],17],[[38,44],17],[[38,44],17],[[38,44],17],[[39,44],17],[[39,44],17],[[39,44],17],[[39,44],17],[[39,44],17],[[40,44],17],[[40,44],17],[[40,44],17],[[40,44],17],[[40,44],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[22,[[3,[38]]]],[22,[[3,[39]]]],[22,[[3,[40]]]],[22,38],[22,39],[22,40],[22,38],[22,39],[22,40],[-1,38,[[43,[],[[42,[38]]]]]],[-1,39,[[43,[],[[42,[39]]]]]],[-1,40,[[43,[],[[42,[40]]]]]],[[38,-1],4,45],[[39,-1],4,45],[[40,-1],4,45],0,0,0,[46,4],[47,4],0,[[38,38],4],[[39,39],4],[[40,40],4],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],6],[[39,39],6],[[40,40],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,6],[39,6],[40,6],[38,6],[39,6],[40,6],0,0,0,0,0,0,[10,46],[[],47],[38,38],[39,39],[40,40],0,[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[38,38],[[3,[41]]]],[[39,39],[[3,[41]]]],[[40,40],[[3,[41]]]],0,[46,[[3,[22]]]],[47,22],0,[47,6],[46,48],[[38,38],4],[[39,39],4],[[40,40],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[38,38,6],4],[[39,39,6],4],[[40,40,6],4],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],4],[[39,39],4],[[40,40],4],[[38,38],38],[[39,39],39],[[40,40],40],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[38,38],4],[[39,39],4],[[40,40],4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[38,38],38],[[39,39],39],[[40,40],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[46,22],4],[[47,22],4],[46,49],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,-1,[]],[36,4],[-1,-2,[],[]],[[],36],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[36,22],[36,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,22],4],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[50,[[20,[51]]]],0,[51,4],[52,4],[-1,-1,[]],[-1,-1,[]],[51,[[23,[22]]]],[52,[[23,[22]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],52],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,4],[52,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[53,[[20,[54]]]],[55,[[20,[54]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[54,4],[56,4],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,6],[56,6],[10,56],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[54,57],[56,57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[58,[[20,[59]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],60],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[59,[23,[22]]],10],[[60,[23,[22]]],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[59,[23,[22]]],4],[[60,[23,[22]]],4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[61,10,62],63],[[61,10,62],63],[62,62],[[-1,-2],4,[],[]],[[61,10,62,63],4],[[61,10,62,10],4],[[61,10,62,10],4],[[61,10,62,10],[[4,[63,10]]]],[-1,-1,[]],[-1,-1,[]],[[61,10],63],[[61,10,62],63],[[10,62],10],[-1,-2,[],[]],[-1,-2,[],[]],[10,61],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[61,10],63],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[61,10,63],4],[[61,10,62,63],4],[[],10],[[61,10,62],63],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[64,[23,[22]]],10],[64,6],0,[64,6],[[64,[23,[22]]],10],0,0,0,0,0,0,0,0,0,0,[[],65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[65,65],65],[[65,65],4],[[65,65],65],[[65,65],4],[65,63],0,[[65,65],65],[[65,65],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[65,65],[[-1,-2],4,[],[]],[[65,65],41],[65,65],[[65,65],6],[66,[[20,[67]]]],[[65,65],65],[[],65],[[65,65],6],[[65,-1],4,[[43,[],[[42,[65]]]]]],[[65,44],17],[[65,44],17],[[65,44],17],[[65,44],17],[[65,44],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[63,[[3,[65]]]],[63,65],[63,65],[-1,65,[[43,[],[[42,[65]]]]]],[[65,-1],4,45],0,0,[[65,65],4],[[65,65],65],[[65,65],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,6],[65,6],[[],4],[[6,6,[20,[67]]],68],[65,65],0,[[16,65],[[3,[[20,[68]]]]]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[65,65],[[3,[41]]]],[[68,[23,[22]]],10],[68,[[31,[22]]]],[65,[[4,[6,6]]]],[68,6],0,[[65,65],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[65,65,6],4],[[65,65],65],[[65,65],4],[[65,65],65],[-1,-2,[],[]],[[65,65],4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[65,65],65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,6],0,[[68,[23,[22]]],10],0,0,0,0,0,0,0,[69,6],0,[69,10],[69,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[70,70],[[-1,-2],4,[],[]],[[70,70],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[4,[[20,[71]],[20,[71]]]]]],[[],69],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[71,[23,[22]]],10],[69,22],[[[20,[[7,[69]]]]],71],[71,6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[69,[20,[71]]],4],0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,6],0,[[71,[23,[22]]],10],[[69,22],4],0,[[[20,[[7,[69]]]]],71],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[72,[23,[22]]],10],[[73,[23,[22]]],10],[72,6],[73,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,6],[73,6],[[72,[23,[22]]],10],[[73,[23,[22]]],10],[74,11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[75,76],6],[75,4],[-1,-1,[]],[[[3,[16]]],4],[-1,-2,[],[]],[[75,77],4],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[[23,[22]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[75,16],17],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[78,78],[[-1,-2],4,[],[]],0,0,[[78,44],17],[-1,-1,[]],[-1,-1,[]],[78,79],[78,79],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[78,-1,[]],0,[[79,79],80],[[79,79],78],[80,[[3,[-1]]],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[81,[[3,[2]]]],[82,[[3,[2]]]],[[81,10],[[3,[[31,[2]]]]]],[[82,10],[[3,[[31,[2]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,0,[[81,2],4],[[82,2],4],[83,[[7,[82]]]],[30,4],0,0,[[30,44],17],[[],[[3,[30]]]],[10,[[3,[[31,[30]]]]]],[[],[[3,[2]]]],[[],4],[[],4],[2,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[82,2,2],4],[[10,10],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],81],[2,30],[[],82],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[84,11],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,[85,4],[[],86],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[86,86],86],[[86,86],4],[[86,86],86],[[86,86],4],[86,22],0,[[86,86],86],[[86,86],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[87,87],[86,86],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[86,86],41],[86,86],[[86,86],6],[[88,89,[23,[22]]],4],0,[[86,86],86],[[],86],[[87,87],6],[[86,86],6],[[86,-1],4,[[43,[],[[42,[86]]]]]],[[87,44],17],[[86,44],17],[[86,44],17],[[86,44],17],[[86,44],17],[[86,44],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[88,88],[22,[[3,[86]]]],[22,86],[22,86],[[[23,[22]]],[[4,[85,10,10]]]],[85,85],[-1,86,[[43,[],[[42,[86]]]]]],[[86,-1],4,45],[[86,86],4],[[85,90,90,86],4],[[86,86],86],[[86,86],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,91],[-1,-2,[],[]],[86,6],[86,6],[[88,89],4],0,0,[[90,90,87,86],88],[[],85],[86,86],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,[[86,86],[[3,[41]]]],[[85,88,[3,[[23,[22]]]]],4],[85,4],[[86,86],4],[[85,79],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[86,86,6],4],[[86,86],86],[[86,86],4],[[86,86],86],[-1,-2,[],[]],[-1,-2,[],[]],[[86,86],4],[85,89],[[85,79],[[3,[[4,[2,91]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[86,86],86],[[88,89],4],[[88,89,79],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,10],[[89,22,10],[[23,[22]]]],[89,-1,[]],[89,-1,[]],[[89,22],92],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[93,93],[[-1,-2],4,[],[]],[94,[[20,[95]]]],[[93,93],6],[[93,44],[[12,[4,96]]]],[[93,44],[[12,[4,96]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[63,93],[[[23,[22]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[22,22,22,22],93],[[],95],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[93,92],[-1,92,[]],[93,63],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[10,[20,[97]]],4],[[98,99,[20,[97]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[98,99],[[3,[4]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[100,[[7,[[31,[[3,[101]]]]]]]],[102,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,[[3,[10]]]],[10,102],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,[10,6],[[102,[23,[22]]],10],[102,6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[102,6],[[102,[23,[22]]],10],0,0,0,0,[[93,98,98],[[3,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[103,[[7,[[31,[[3,[104]]]]]]]],[-1,-1,[]],[-1,-1,[]],[10,[[3,[[4,[63,63]]]]]],[[93,98,98],[[3,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[10,[[3,[[31,[22]]]]]],[[10,[31,[22]]],4],0,[10,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[10,63,63],4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[105,4],[-1,-1,[]],[-1,-2,[],[]],[[93,98,98,63,63],105],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[105,[23,[22]]],10],[105,6],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,6],[[105,[23,[22]]],10],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[106,4],[-1,-1,[]],[-1,-2,[],[]],[[93,98,98],106],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[106,[23,[22]]],10],[106,6],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[106,6],[[106,[23,[22]]],10],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],107],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,108],0,[[107,[20,[109]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[109,4],[110,4],[111,4],0,0,[[],110],[[],111],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[109,4],[110,4],[111,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[112,4],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[10,112],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[112,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[[113,[-1]]],-2,[],[]],[114,[[116,[115]]]],[[[113,[-1]]],-2,[],[]],[[[113,[-1]]],4,[]],[115,4],[[[7,[-1]]],[[113,[-1]]],[]],[[[7,[-1]],-3],-2,[],[],[[117,[-1],[[27,[-2]]]]]],[115,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[116,[-1]]],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[116,[-1]]],[]],[[],115],[-1,[[7,[-1]]],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,[118,[10]]],119],0,[10,119],[10,119],[[22,63],119],[10,119],[[10,22,10],119],[[10,22,10],119],0,[[],119],[[],119],[[],119],[[],119],[10,119],[[63,98,98],119],[98,119],[[22,10],119],[34,11],[[],119],[[],119],[[],119],[[10,63],119],[[119,34],119],[[],119],[[],119],[10,119],[[10,10],119],[6,119],[10,119],[10,119],[10,119],[10,119],[10,119],[10,119],[[],119],[[10,10],119],[10,34],0,0,0,0,0,0,0,0,[[],4],0,[-1,-2,[],[]],[[],4],[[],108],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[3,[[4,[34,16]]]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[120,4],0,0,0,0,[121,[[20,[122]]]],[34,4],[-1,-1,[]],0,[-1,-2,[],[]],0,[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],4],0,0,[[],4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[123,10],[124,4],[124,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[[123,10],4],[124,4],[124,4],[125,[[7,[123]]]],[126,[[7,[123]]]],[127,4],[124,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[128,[[4,[10,10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],123],[[],128],[[[20,[122]],10,6],124],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[],127],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[10,10],[124,8],[124,10],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[124,10],0,[[10,10],10],[124,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[129,[20,[97]]],4],[[[20,[97]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[130,[[7,[129]]]],[131,[[7,[[132,[10,[20,[122]]]]]]]],[129,[[3,[[20,[97]]]]]],[[],[[3,[[20,[97]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[10,[20,[122]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],129],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[10,[[3,[[20,[122]]]]]],0,[10,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[97]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[133,10],[133,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,0,[[133,10],4],[[[20,[122]],[23,[22]],[31,[92]]],4],0,0,[[[20,[122]]],[[20,[122]]]],[-1,-1,[]],[-1,-1,[]],[[133,10],[[20,[97]]]],[133,89],[122,10],0,[122,[[113,[133]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[23,[22]]],[[20,[122]]]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[133,10],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[134,[[3,[[20,[97]]]]]],0,[[],10],[[],[[20,[122]]]],[[],[[3,[[20,[97]]]]]],[[],8],[[],10],[135,[[7,[134]]]],[-1,-1,[]],[-1,-1,[]],[134,108],[134,6],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],134],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[108,4],[134,[[3,[[20,[97]]]]]],[[],[[3,[[20,[97]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[],120],[-1,-2,[],[]],[[120,120],120],[[120,120],4],[[120,120],120],[[120,120],4],[120,63],0,[[120,120],120],[[120,120],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120,[[3,[[4,[34,16]]]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[120,120],[[-1,-2],4,[],[]],[[120,120],41],[120,120],[[120,120],6],[[120,120],120],[[],120],[[120,120],6],[[120,-1],4,[[43,[],[[42,[120]]]]]],[[120,44],17],[[120,44],17],[[120,44],17],[[120,44],17],[[120,44],17],[-1,-1,[]],[63,[[3,[120]]]],[63,120],[63,120],[-1,120,[[43,[],[[42,[120]]]]]],[[120,-1],4,45],[[120,120],4],[[120,120],120],[[120,120],6],[-1,-2,[],[]],[120,6],[120,6],[120,120],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[120,120],[[3,[41]]]],[[120,120],4],[-1,-2,[],[]],[-1,-2,[],[]],[[120,120,6],4],[[120,120],120],[[120,120],4],[[120,120],120],[-1,-2,[],[]],[[120,120],4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[[120,120],120],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[136,136],[[-1,-2],4,[],[]],[[136,136],6],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[137,136],[137,8],0,[97,[[113,[137]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[20,[122]],10,6,89],97],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],0,[97,89],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[10,[20,[97]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[138,138],41],[139,[[7,[[140,[138]]]]]],[[138,138],6],0,[-1,-1,[]],[-1,-1,[]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[-1,[[4,[-2,6]]],[],[]],[[138,138],[[3,[41]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"PageAllocImpl",0],[5,"PhysPage",2780],[6,"Option",2781],[1,"tuple"],[5,"DEV_NON_BLOCKING_ACCESS",0],[1,"bool"],[5,"UPIntrFreeCell",1982],[5,"TrapFrame",2782],[6,"TrapType",2783],[1,"usize"],[1,"never"],[6,"Result",2784],[5,"TypeId",2785],[5,"Arguments",2786],[5,"Stdout",85],[1,"str"],[8,"Result",2786],[5,"BLOCK_DEVICE",116],[10,"BlockDevice",2787],[5,"Arc",2788],[5,"VirtIOBlock",141],[1,"u8"],[1,"slice"],[5,"PciRoot",2789],[5,"DeviceFunction",2789],[5,"PciTransport",2790],[17,"Output"],[10,"FnMut",2791],[5,"QUEUE_FRAMES",177],[5,"FrameTracker",1275],[5,"Vec",2792],[6,"BufferDirection",2793],[5,"NonNull",2794],[1,"i32"],[5,"UART",224],[5,"PolyInput",582],[10,"CharDevice",224],[5,"IER",254],[5,"LSR",254],[5,"MCR",254],[6,"Ordering",2795],[17,"Item"],[10,"IntoIterator",2796],[5,"Formatter",2786],[10,"Hasher",2797],[5,"NS16550aRaw",254],[5,"NS16550a",254],[5,"ReadWithoutDLAB",254],[5,"WriteWithoutDLAB",254],[5,"GPU_DEVICE",608],[10,"GpuDevice",608],[5,"VirtIOGpuWrapper",608],[5,"KEYBOARD_DEVICE",665],[10,"InputDevice",665],[5,"MOUSE_DEVICE",665],[5,"VirtIOInputWrapper",665],[1,"u64"],[5,"NET_DEVICE",766],[10,"NetDevice",766],[5,"VirtIONetWrapper",766],[5,"PLIC",815],[6,"IntrTargetPriority",815],[1,"u32"],[10,"File",876],[5,"OpenFlags",890],[5,"ROOT_INODE",890],[5,"Inode",2798],[5,"OSInode",890],[5,"PipeRingBuffer",1034],[6,"RingBufferStatus",1034],[5,"Pipe",1034],[5,"Stdin",1124],[5,"Stdout",1124],[5,"PanicInfo",2799],[5,"Logger",1173],[5,"Metadata",2800],[5,"Record",2800],[5,"VPNRange",1220],[5,"VirtPage",2780],[5,"SimpleRangeIterator",1220],[10,"FrameAllocator",1275],[5,"StackFrameAllocator",1275],[5,"FRAME_ALLOCATOR",1275],[5,"Layout",2801],[5,"MemorySet",1370],[5,"MapPermission",1370],[6,"MapType",1370],[5,"MapArea",1370],[5,"PageTable",2802],[5,"VirtAddr",2780],[5,"MappingFlags",2802],[5,"String",2803],[5,"IPv4",1533],[5,"LOSE_NET_STACK",1533],[5,"NetStack",1533],[5,"Error",2786],[5,"TaskControlBlock",2645],[1,"u16"],[5,"TCPPacket",2804],[5,"LISTEN_TABLE",1613],[5,"Port",1613],[5,"PortFd",1613],[5,"SOCKET_TABLE",1689],[5,"Socket",1689],[5,"TCP",1744],[5,"UDP",1776],[5,"Condvar",1817],[5,"KContext",2805],[10,"Mutex",1863],[5,"MutexSpin",1863],[5,"MutexBlocking",1863],[5,"Semaphore",1936],[5,"UPIntrRefMut",1982],[5,"INTR_MASKING_INFO",1982],[5,"IntrMaskingInfo",1982],[5,"UPSafeCellRaw",1982],[10,"FnOnce",2791],[1,"array"],[1,"isize"],[5,"SignalFlags",2576],[5,"INITPROC",2176],[5,"ProcessControlBlock",2454],[5,"RecycleAllocator",2230],[5,"TaskUserRes",2230],[5,"PID_ALLOCATOR",2230],[5,"KSTACK_ALLOCATOR",2230],[5,"PidHandle",2230],[5,"KernelStack",2230],[5,"TaskManager",2380],[5,"TASK_MANAGER",2380],[5,"PID2PCB",2380],[5,"BTreeMap",2806],[5,"ProcessControlBlockInner",2454],[5,"Processor",2519],[5,"PROCESSOR",2519],[6,"TaskStatus",2645],[5,"TaskControlBlockInner",2645],[5,"TimerCondVar",2727],[5,"TIMERS",2727],[5,"BinaryHeap",2807],[8,"CharDeviceImpl",61],[8,"BlockDeviceImpl",61],[8,"VirtIoTransport",141],[5,"VirtioHal",177],[5,"NS16550aInner",254],[8,"VirtIoTransport",608],[5,"VirtIOInputInner",665],[8,"VirtIoTransport",665],[5,"OSInodeInner",890],[8,"FrameAllocatorImpl",1275],[5,"CondvarInner",1817],[5,"MutexBlockingInner",1863],[5,"SemaphoreInner",1936]],"b":[[378,"impl-Binary-for-IER"],[379,"impl-UpperHex-for-IER"],[380,"impl-LowerHex-for-IER"],[381,"impl-Debug-for-IER"],[382,"impl-Octal-for-IER"],[383,"impl-Debug-for-LSR"],[384,"impl-Binary-for-LSR"],[385,"impl-UpperHex-for-LSR"],[386,"impl-Octal-for-LSR"],[387,"impl-LowerHex-for-LSR"],[388,"impl-Octal-for-MCR"],[389,"impl-Binary-for-MCR"],[390,"impl-LowerHex-for-MCR"],[391,"impl-Debug-for-MCR"],[392,"impl-UpperHex-for-MCR"],[943,"impl-Octal-for-OpenFlags"],[944,"impl-Binary-for-OpenFlags"],[945,"impl-LowerHex-for-OpenFlags"],[946,"impl-Debug-for-OpenFlags"],[947,"impl-UpperHex-for-OpenFlags"],[1431,"impl-Binary-for-MapPermission"],[1432,"impl-Debug-for-MapPermission"],[1433,"impl-LowerHex-for-MapPermission"],[1434,"impl-UpperHex-for-MapPermission"],[1435,"impl-Octal-for-MapPermission"],[1559,"impl-Debug-for-IPv4"],[1560,"impl-Display-for-IPv4"],[2607,"impl-UpperHex-for-SignalFlags"],[2608,"impl-Binary-for-SignalFlags"],[2609,"impl-Octal-for-SignalFlags"],[2610,"impl-LowerHex-for-SignalFlags"],[2611,"impl-Debug-for-SignalFlags"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
